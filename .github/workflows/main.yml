name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
         aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY_ID }}'
         aws-secret-access-key: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
         aws-region: us-west-1

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14

    - name: Install dependencies
      run: npm install

    - name: Run unit tests
      run: npm test

    - name: Lint code
      run: npm run lint

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      run: |
        wget https://releases.hashicorp.com/terraform/1.0.3/terraform_1.0.3_linux_amd64.zip
        unzip terraform_1.0.3_linux_amd64.zip
        chmod +x terraform
        mv terraform /usr/local/bin/
        terraform --version

    - name: Deploy infrastructure
      run: |
        cd infrastructure
        terraform init
        terraform apply -auto-approve

    - name: Build Docker image
      run: |
        docker build -t web-app-image .
        docker tag web-app-image:latest your-docker-repo/web-app-image:latest
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker push your-docker-repo/web-app-image:latest

    - name: Update ECS service
      run: |
        ecs-cli compose -f docker-compose.yml service up
